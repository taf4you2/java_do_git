/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import module.LottoGame;
import javax.swing.JOptionPane;

/**
 *
 * @author wojtek
 */
public class LottoGameFrame extends javax.swing.JFrame {

    /**
     * Creates new form LottoGameFrame
     */
    public LottoGameFrame() {
        initComponents();
        updateGameInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        instrictionLabel = new javax.swing.JLabel();
        gameComboBox = new javax.swing.JComboBox<>();
        gameInfoLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultArea = new java.awt.TextArea();
        generateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        instrictionLabel.setLabelFor(gameComboBox);
        instrictionLabel.setText("Select Game Type");

        gameComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lotto", "MultiMulti", "MiniLotto" }));
        gameComboBox.setToolTipText("");
        gameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameComboBoxActionPerformed(evt);
            }
        });

        gameInfoLabel.setText("Draws 6 numbers from 1 to 49");

        resultLabel.setText("Generated numbers:");

        resultArea.setEditable(false);
        jScrollPane1.setViewportView(resultArea);

        generateButton.setMnemonic('g');
        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        clearButton.setMnemonic('c');
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(instrictionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(gameInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instrictionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(gameInfoLabel)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateButton)
                    .addComponent(clearButton))
                .addGap(18, 18, 18)
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
 * Update game information label based on selected game type
 */
private void updateGameInfo() {
    String selectedGame = (String) gameComboBox.getSelectedItem();
    String info = "";
    
    switch (selectedGame.toLowerCase()) {
        case "lotto":
            info = "Draws 6 numbers from 1 to 49";
            break;
        case "multimulti":
            info = "Draws 10 numbers from 1 to 80";
            break;
        case "minilotto":
            info = "Draws 5 numbers from 1 to 42";
            break;
    }
    
    gameInfoLabel.setText(info);
}

/**
 * Generate lottery numbers based on selected game type
 */
private void generateNumbers() {
    String selectedGame = (String) gameComboBox.getSelectedItem();
    LottoGame game = createGame(selectedGame);
    
    if (game != null) {
        game.generateNumbers();
        displayResults(game);
    } else {
        JOptionPane.showMessageDialog(
            this,
            "Unknown game type: " + selectedGame,
            "Error",
            JOptionPane.ERROR_MESSAGE
        );
    }
}

/**
 * Create a LottoGame instance based on game type
 * 
 * @param gameType the type of game to create
 * @return LottoGame instance or null if unknown type
 */
private LottoGame createGame(String gameType) {
    switch (gameType.toLowerCase()) {
        case "lotto":
            return new LottoGame("Lotto", 6, 1, 49);
        case "multimulti":
            return new LottoGame("MultiMulti", 10, 1, 80);
        case "minilotto":
            return new LottoGame("Mini Lotto", 5, 1, 42);
        default:
            return null;
    }
}

/**
 * Display generated numbers in the result area
 * 
 * @param game the LottoGame with generated numbers
 */
private void displayResults(LottoGame game) {
    StringBuilder result = new StringBuilder();
    result.append(game.getGameName()).append("\n");
    result.append("=".repeat(game.getGameName().length())).append("\n\n");
    
    int[] numbers = game.getGeneratedNumbers();
    for (int i = 0; i < numbers.length; i++) {
        result.append(String.format("%3d", numbers[i]));
        if (i < numbers.length - 1) {
            result.append("  ");
        }
    }
    result.append("\n");
    
    resultArea.setText(result.toString());
}
    
    private void gameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameComboBoxActionPerformed
        updateGameInfo();
    }//GEN-LAST:event_gameComboBoxActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        generateNumbers();
    }//GEN-LAST:event_generateButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        resultArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LottoGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LottoGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LottoGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LottoGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LottoGameFrame().setVisible(true);
            }
        });
    }

    /**
 * Setup logical tab order for keyboard navigation
 */
private void setupTabOrder() {
    java.util.Vector<java.awt.Component> order = new java.util.Vector<>();
    order.add(gameComboBox);
    order.add(generateButton);
    order.add(clearButton);
    order.add(resultArea);
    
    setFocusTraversalPolicy(new javax.swing.LayoutFocusTraversalPolicy() {
        @Override
        public java.awt.Component getComponentAfter(java.awt.Container focusCycleRoot, java.awt.Component aComponent) {
            int idx = order.indexOf(aComponent);
            if (idx >= 0) {
                idx = (idx + 1) % order.size();
                return order.get(idx);
            }
            return super.getComponentAfter(focusCycleRoot, aComponent);
        }
        
        @Override
        public java.awt.Component getComponentBefore(java.awt.Container focusCycleRoot, java.awt.Component aComponent) {
            int idx = order.indexOf(aComponent);
            if (idx >= 0) {
                idx = (idx - 1 + order.size()) % order.size();
                return order.get(idx);
            }
            return super.getComponentBefore(focusCycleRoot, aComponent);
        }
        
        @Override
        public java.awt.Component getFirstComponent(java.awt.Container focusCycleRoot) {
            return order.get(0);
        }
        
        @Override
        public java.awt.Component getLastComponent(java.awt.Container focusCycleRoot) {
            return order.get(order.size() - 1);
        }
    });
}
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> gameComboBox;
    private javax.swing.JLabel gameInfoLabel;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel instrictionLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.TextArea resultArea;
    private javax.swing.JLabel resultLabel;
    // End of variables declaration//GEN-END:variables
}
